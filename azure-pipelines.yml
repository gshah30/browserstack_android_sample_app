# Gradle

# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'
- task: BrowserStackConfig@0
  inputs:
    BrowserStackServiceEndPoint: 'Browserstack Connection'
    browserstackLocal: true
- task: BrowserStackAppUploader@0
  inputs:
    appPath: 'browserstack_android_sample/build/outputs/apk/debug/browserstack_android_sample-debug.apk'
- task: Maven@3
  inputs:
    mavenPomFile: 'android/testng-examples/pom.xml'
    goals: 'test -P first'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    mavenOptions: '-Xmx3072m'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
- task: BrowserStackResults@0
- task: BrowserStackStopLocal@0
